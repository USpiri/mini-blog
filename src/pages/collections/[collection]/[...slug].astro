---
import Markdown from "@components/markdown/Markdown.astro";
import Layout from "@layouts/Layout.astro";
import { sortPosts } from "@utils/sort";
import { slug } from "@utils/utils";
import type { GetStaticPaths } from "astro";
import { getCollection, type CollectionEntry } from "astro:content";

export const getStaticPaths = (async () => {
  const posts = sortPosts(await getCollection("blog"), {
    filterNonPublished: false,
  }).filter((post) => post.data.collection !== undefined);
  return posts.map((post) => {
    return {
      params: {
        collection: slug(post.data.collection ?? ""),
        slug: post.slug,
      },
      props: { post, collection: post.data.collection },
    };
  });
}) satisfies GetStaticPaths;

interface Props {
  post: CollectionEntry<"blog">;
  collection: string;
}

const { post, collection } = Astro.props;
const { Content } = await post.render();
---

<Layout
  title={`${collection} | ${post.data.title}`}
  description={post.data.description}
>
  <main
    class="text-neutral-800 dark:text-neutral-200 flex items-center flex-col my-10 md:my-20"
  >
    <Markdown
      title={post.data.title}
      description={post.data.description}
      id={post.id}
      pageFind={!post.data.published}
    >
      <Content />
    </Markdown>
  </main>
</Layout>
