---
import NavigationCard from "@components/NavigationCard.astro";
import Markdown from "@components/markdown/Markdown.astro";
import DocsLayout from "@layouts/DocsLayout.astro";
import { capitalize, getFolders } from "@utils/utils";
import type { GetStaticPaths } from "astro";
import { getCollection, type CollectionEntry } from "astro:content";

export const getStaticPaths = (async () => {
  const docs = (await getCollection("docs")).sort((a, b) => {
    const ordenA = a.data.order || Number.POSITIVE_INFINITY;
    const ordenB = b.data.order || Number.POSITIVE_INFINITY;
    return ordenA - ordenB;
  });
  console.log(docs);

  const folders = getFolders(docs);
  return folders.map((folder) => {
    const filteredDocs = docs.filter((doc) => doc.slug.startsWith(folder));
    return {
      params: {
        folder,
      },
      props: { docs: filteredDocs },
    };
  });
}) satisfies GetStaticPaths;

interface Props {
  docs: CollectionEntry<"docs">[];
}

const { docs } = Astro.props;

const { folder } = Astro.params;
const title = capitalize(folder ?? "Posts");
const isSingle = docs.length === 1 && docs[0].slug.split("/").length === 1;
const { Content } = await docs[0].render();
---

<DocsLayout title="" description="">
  <main
    class="text-neutral-800 dark:text-neutral-200 flex items-center flex-col"
  >
    {
      !isSingle && (
        <section class="max-w-3xl w-full my-10 md:my-20">
          <header class="not-prose px-3">
            <h1 class="text-4xl font-bold mb-3 text-neutral-800 dark:text-neutral-200">
              {title}
            </h1>
          </header>
          <ul class="mt-8 px-2 xl:px-0 flex gap-3 flex-col">
            {docs.map((doc) => (
              <li>
                <NavigationCard
                  href={`/docs/${doc.slug}`}
                  label={doc.data.title}
                />
              </li>
            ))}
          </ul>
        </section>
      )
    }
    {
      isSingle && (
        <Markdown
          title={docs[0].data.title}
          description={docs[0].data.description}
          slug={docs[0].slug}
        >
          <Content />
        </Markdown>
      )
    }
  </main>
</DocsLayout>
