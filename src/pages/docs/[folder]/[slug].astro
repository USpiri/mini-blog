---
import type { GetStaticPaths } from "astro";
import DocsLayout from "@layouts/DocsLayout.astro";
import {
  getCollection,
  type CollectionEntry,
  getEntryBySlug,
} from "astro:content";
import Markdown from "@components/markdown/Markdown.astro";
import NavigationCard from "@components/NavigationCard.astro";

export const getStaticPaths = (async () => {
  const docs = await getCollection("docs");
  return docs.map((doc) => {
    return {
      params: {
        folder: `${doc.slug.split("/")[0]}`,
        slug: `${doc.slug.split("/")[1]}`,
      },
      props: { doc },
    };
  });
}) satisfies GetStaticPaths;

interface Props {
  doc: CollectionEntry<"docs">;
}

const { doc } = Astro.props;
const { folder } = Astro.params;
const { Content } = await doc.render();

const next = await getEntryBySlug("docs", `${folder}/${doc.data.next}`);
const prev = await getEntryBySlug("docs", `${folder}/${doc.data.prev}`);
---

<DocsLayout title="" description="">
  <main
    class="text-neutral-800 dark:text-neutral-200 flex items-center flex-col my-10 md:my-20"
  >
    <Markdown
      title={doc.data.title}
      description={doc.data.description}
      slug={doc.slug}
    >
      <Content />
    </Markdown>
    <nav class="max-w-3xl w-full mt-5 flex gap-3">
      {
        prev && (
          <NavigationCard
            label={prev.data.title}
            href={`/docs/${prev.slug}`}
            type="prev"
          />
        )
      }
      {
        next && (
          <NavigationCard
            label={next.data.title}
            href={`/docs/${folder}/${doc.data.next}`}
          />
        )
      }
    </nav>
  </main>
</DocsLayout>
